<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://sambilbow.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sambilbow.com/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-01-29T09:00:23+00:00</updated><id>https://sambilbow.com/feed.xml</id><title type="html">blank</title><subtitle>Sam Bilbow - Software developer, experimental musician and postdoctoral researcher based in Norwich.
</subtitle><entry><title type="html">📷 xvisio on linux</title><link href="https://sambilbow.com/blog/2023/xvisio-linux/" rel="alternate" type="text/html" title="📷 xvisio on linux" /><published>2023-07-20T00:00:00+00:00</published><updated>2023-07-20T00:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/xvisio-linux</id><content type="html" xml:base="https://sambilbow.com/blog/2023/xvisio-linux/"><![CDATA[<h2 id="resources">Resources</h2>
<p>Latest release at time of writing is the September 9th version. Links may die, <code class="language-plaintext highlighter-rouge">../</code> up the tree until you find the right files if necessary</p>

<p>For Ubuntu</p>
<ul>
  <li><a href="https://download.xvisiotech.com/sdk-download/last_version/Select_Platform_Download/For%20Ubuntu/AMD64/xvsdk_3.2.0-20230907_bionic_amd64.deb">SDK (Bionic .deb)</a></li>
  <li><a href="https://download.xvisiotech.com/sdk-download/last_version/Select_Platform_Download/For%20Ubuntu/AMD64/xvsdk_3.2.0-20230907_focal_amd64.deb">SDK (Focal .deb)</a></li>
  <li><a href="https://download.xvisiotech.com/sdk-download/last_version/Select_Platform_Download/For%20Ubuntu/AMD64/xvsdk_3.2.0-20230907_amd64.snap">Viewer .snap</a></li>
</ul>

<p>For Arch (WIP)</p>
<ul>
  <li><a href="https://aur.archlinux.org/packages/xvsdk">SDK on AUR</a></li>
  <li><a href="https://aur.archlinux.org/packages/xvsdk-viewer">Viewer on AUR (requires snapd)</a></li>
</ul>

<h2 id="monado-driver">Monado Driver</h2>
<p>Work done by Mihir Patel on an open-source Xvisio driver can be found <a href="https://github.com/0xMihir/libxvisio/">on GitHub here</a>.</p>]]></content><author><name></name></author><category term="open-source" /><category term="linux" /><category term="software" /><category term="augmented-reality" /><summary type="html"><![CDATA[developing on arch linux]]></summary></entry><entry><title type="html">🥱 linux and email</title><link href="https://sambilbow.com/blog/2023/mail-stuff/" rel="alternate" type="text/html" title="🥱 linux and email" /><published>2023-06-09T00:00:00+00:00</published><updated>2023-06-09T00:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/mail%20stuff</id><content type="html" xml:base="https://sambilbow.com/blog/2023/mail-stuff/"><![CDATA[<ul>
  <li>I really don’t like webmail!</li>
  <li>It frustrate, confuses, and distracts me!</li>
  <li>I like dedicated mail clients!</li>
</ul>

<p>Since something got deprecated somewhere, and someone doesn’t want to do X because of Y, theres only one specific way to set up institutional email on Linux, no more IMAP, no more POP; and this method is via Exchange Web Services. Theres a more informational and less ranty account <a href="https://douglasrumbaugh.com/post/microsoft-email-on-linux/">here</a>.</p>

<ul>
  <li>On GNOME: <code class="language-plaintext highlighter-rouge">yay -S evolution evolution-ews</code></li>
  <li>On KDE: <code class="language-plaintext highlighter-rouge">yay -S kmail kmailtransport kmail-account-wizard mbox-importer akonadi-import-wizard</code></li>
</ul>

<h2 id="evolution-gnome-project-email-client">Evolution (GNOME Project email client)</h2>
<ul>
  <li>Add an account with type <code class="language-plaintext highlighter-rouge">EWS</code></li>
  <li>Include ‘Username’ in <code class="language-plaintext highlighter-rouge">username@domain.ac.uk</code> format</li>
  <li>Set ‘Host URL’ to <code class="language-plaintext highlighter-rouge">https://outlook.office365.com/ews/exchange.asmx</code></li>
  <li>Don’t click ‘Fetch URL’</li>
  <li>Do not collect $200, and do not pass GO</li>
  <li>Set ‘Authentication’ to OAuth2</li>
  <li>Override settings</li>
  <li>Check ‘Use protocol version 2.0’</li>
  <li>Click ‘OK’</li>
</ul>

<div class="row">
    <div class="col-sm mt-1 mt-md-0">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="/assets/img/ews.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Screenshot showing Evolution EWS account settings" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
</div>

<h2 id="kmail-kde-plasma-email-client">KMail (KDE Plasma email client)</h2>
<ul>
  <li>I gave up on KDE</li>
  <li>It’s really ugly</li>
  <li>Cluttered base UI</li>
</ul>]]></content><author><name></name></author><category term="open-source" /><category term="linux" /><category term="software" /><summary type="html"><![CDATA[getting oauth2 and ews working on linux]]></summary></entry><entry><title type="html">getting started with stardust xr</title><link href="https://sambilbow.com/blog/2023/getting-started-with-stardust-xr/" rel="alternate" type="text/html" title="getting started with stardust xr" /><published>2023-05-11T00:00:00+00:00</published><updated>2023-05-11T00:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/getting-started-with-stardust-xr</id><content type="html" xml:base="https://sambilbow.com/blog/2023/getting-started-with-stardust-xr/"><![CDATA[<h2 id="summary">Summary</h2>
<hr />
<p>As part of <a href="/projects/comuse/">coMuse</a> I hope to move towards a fully open-source stack for multi-user musical AR experience. In my <a href="/blog/2023/north-star-on-linux">last post</a> on this topic, I went through how I set up Linux with Monado and OpenXR to recognise the North Star headset, and utilise its hand and head tracking sensors. This post will be about <a href="https://stardustxr.org/">Stardust XR</a>.</p>

<p>Stardust is a system UI framework where multiple different clients (programs that connect to Stardust directly) can create objects for the user to interact with their apps and device. The user can choose to use the objects that work best for their current scenario, and default setups can easily be created so users start out with all the essentials.</p>

<p>The value of this for <a href="/projects/comuse/">coMuse</a> lies in the ability to render and interact with software that exists in 2D forms without having to rebuild or port them to AR. This sits within the developer workflow nicely as it allows for a fully AR setup without switching between AR and 2D displays. Additionally it benefits the participant or audience, as they will likely be experiencing pre-composed Godot scenes or applications built with Stereokit that can sit within Stardust XR.</p>

<p>Some preliminary ideas for developer workflow bindings</p>
<ul>
  <li>Gestural interactions with already visual languages like <a href="https://puredata.info/">PureData</a></li>
  <li>Adding gestural interactivity for code-based computer music languages, like <a href="https://supercollider.github.io/">Supercollider</a> and <a href="https://glicol.org/">Glicol</a></li>
</ul>

<p>Some preliminary ideas for audience interface with Stardust</p>
<ul>
  <li>Ease of switching between experiences via panel shells</li>
  <li>Menu style launcher</li>
  <li>Modularity between instruments, which could be their own OpenXR applications.</li>
</ul>

<p><strong>Revised Linux Stack</strong></p>

<p>North Star → OpenXR → Monado → Stardust XR → Application(s), both 2D and 3D</p>

<p><br /></p>

<h2 id="installation-of-stardust-xr">Installation of Stardust XR</h2>
<hr />
<ol>
  <li>Install prerequisites found <a href="https://stardustxr.org/docs/getting-started/install">here</a>, i.e.:
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>yay <span class="nt">-S</span> cargo flatbuffers seatd fontconfig wayland openxr-git libglvnd mesa libx11 libxext libxfixes clang <span class="nt">--needed</span>
</code></pre></div>    </div>
  </li>
  <li>Download <a href="https://github.com/StardustXR/telescope">telescope</a>, a bash setup guide for Stardust XR.
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/StardustXR/telescope
</code></pre></div>    </div>
  </li>
  <li>Enter the folder and run the setup to download Stardust XR’s first party clients.
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>telescope <span class="o">&amp;&amp;</span> <span class="se">\</span>
./setup.sh
</code></pre></div>    </div>
  </li>
  <li>For each first-party client you want to run, enter its folder now downloaded into <code class="language-plaintext highlighter-rouge">repos/</code> and build. We’ll build <code class="language-plaintext highlighter-rouge">stardust-xr-server</code> and <code class="language-plaintext highlighter-rouge">comet</code>.
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>server <span class="o">&amp;&amp;</span> <span class="se">\</span>
cargo build <span class="nt">--release</span> <span class="o">&amp;&amp;</span> <span class="se">\</span>
<span class="nb">cd</span> ../comet <span class="o">&amp;&amp;</span> <span class="se">\</span>
cargo build <span class="nt">--release</span>
</code></pre></div>    </div>
  </li>
  <li>For ease, lets add the binaries that have been build in each <code class="language-plaintext highlighter-rouge">target/release/</code> folder to our <code class="language-plaintext highlighter-rouge">zsh</code> <code class="language-plaintext highlighter-rouge">PATH</code> so that we can run them from anywhere. Add the following to your <code class="language-plaintext highlighter-rouge">~/.zshrc</code> using a text editor like <code class="language-plaintext highlighter-rouge">vim</code> or <code class="language-plaintext highlighter-rouge">nano</code>, taking care to replace <code class="language-plaintext highlighter-rouge">&lt;telescope location&gt;</code> with the absolute path to <code class="language-plaintext highlighter-rouge">telescope/</code>, i.e. <code class="language-plaintext highlighter-rouge">find ~/Documents/repos/telescope/repos/*/target/release/]</code>
    <div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span><span class="si">$(</span>find &lt;telescope location&gt;/repos/<span class="k">*</span>/target/release/ <span class="nt">-maxdepth</span> 1 <span class="nt">-type</span> f <span class="nt">-executable</span> <span class="nt">-printf</span> <span class="s2">":%h"</span><span class="si">)</span>
</code></pre></div>    </div>
  </li>
  <li>Close and open a new terminal window or run <code class="language-plaintext highlighter-rouge">exec zsh</code> to refresh. Check that <code class="language-plaintext highlighter-rouge">PATH</code> was updated with <code class="language-plaintext highlighter-rouge">echo $PATH</code>. You should see the Stardust release folders added at the end.</li>
</ol>

<p><br /></p>

<h2 id="running-a-comet-a-first-party-stardust-xr-client">Running a <code class="language-plaintext highlighter-rouge">comet</code>, a first-party Stardust XR client</h2>
<hr />
<p>Stardust XR is an OpenXR client itself, but it runs on top of Monado for now. This means that you must have <code class="language-plaintext highlighter-rouge">monado-service</code> running, so that the server can connect to it, and serve clients.</p>
<ol>
  <li>Plug in your North Star headset via USB 2.0</li>
  <li>Plug in your North Star via DisplayPort to your graphics card.</li>
  <li>Force <code class="language-plaintext highlighter-rouge">portReset()</code> on your North Star, via holding down the circle and dot buttons for 5 seconds.</li>
  <li>Open three terminal windows</li>
  <li>Run <code class="language-plaintext highlighter-rouge">monado-service</code> in the first terminal window.</li>
  <li>A grey, fullscreen Xwayland Monado window should open on your main display. Move it to your North Star display, e.g by using the Kwin shortcut <code class="language-plaintext highlighter-rouge">Meta-Shift-right</code></li>
  <li>In the second terminal window, run <code class="language-plaintext highlighter-rouge">stardust-xr-server</code>. The display of the headset should switch from grey to black</li>
  <li>In the third terminal window, run <code class="language-plaintext highlighter-rouge">comet</code></li>
  <li>If all goes well you should have 6DoF and hand tracking running in Stardust XR, and you should be able to grab the red pen in front of / above you and draw with it.</li>
</ol>

<p><br /></p>

<h2 id="example-video">Example video</h2>
<hr />
<div class="row">
    <div class="col-sm mt-3 mt-md-0">
        <div class="embed-responsive embed-responsive-16by9"><iframe src="https://www.youtube-nocookie.com/embed/zG__m-gV1qI" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe></div>
    </div>
</div>

<blockquote>
  <p>I have to use <code class="language-plaintext highlighter-rouge">gravity</code> here to run <code class="language-plaintext highlighter-rouge">comet</code> with an offset, as it seems all of my clients like to run about a metre above my head for some reason!</p>
</blockquote>]]></content><author><name></name></author><category term="open-source" /><category term="linux" /><category term="augmented-reality" /><summary type="html"><![CDATA[an open-source linux xr display server]]></summary></entry><entry><title type="html">🎩 moving to bobovr headgear</title><link href="https://sambilbow.com/blog/2023/bobovr-headgear/" rel="alternate" type="text/html" title="🎩 moving to bobovr headgear" /><published>2023-05-10T00:00:00+00:00</published><updated>2023-05-10T00:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/bobovr-headgear</id><content type="html" xml:base="https://sambilbow.com/blog/2023/bobovr-headgear/"><![CDATA[<h2 id="bobovr-m2-plus">BoboVR M2 Plus</h2>

<p>Adaptor designed and shared by Noah Zerkin</p>
<blockquote>
  <p>Had to cut and grind down the slide receivers on that headgear. Want to make one more tweak tomorrow and will post. Ergonomics aren’t bad, even without the foam forehead pad that’s missing from this one. Adjustability isn’t as smooth or clever as FLZero’s, but there’s actually a little more of it in terms of vertical repositioning, and slides out at least far enough to accommodate my glasses.</p>
</blockquote>

<div align="right"><i>
@noazark, August 2022 | Project North Star Discord Server | <a href="https://discord.com/channels/456107915514871828/456857961344532492/1007685576348151900">#3d-printing</a>
</i></div>

<p><br /></p>

<div class="row" align="center">
    <div class="col-sm mt-1 mt-md-0">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="/assets/img/bobovr-1.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="a photo" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
    <div class="col-sm mt-1 mt-md-0">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="/assets/img/bobovr-2.png" class="img-fluid rounded z-depth-1" width="180px" height="auto" title="a photo" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
</div>
<div class="caption">
BoboVR Deck X with Bollé Welding Headgear Deck X in the background on an original calibration stand, and a cable view of the BoboVR with Velcro &amp; zip tie solution
</div>

<h2 id="what-to-print">What to print</h2>
<p><code class="language-plaintext highlighter-rouge">BoboAdapterL.stl</code> (<a href="https://github.com/sambilbow/Deck-X/blob/main/Deck_X/STL_files/Headgear/BoboVR_Headgear_Adaptor/BoboAdapterL.stl">link</a>), for the left side, then again but flip on the x-axis for the right side.</p>

<h2 id="what-to-buy">What to buy</h2>
<p>BoboVR M2 Plus (model without the battery) <a href="https://www.amazon.co.uk/dp/B0B2RP1N4F?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details">[Amazon]</a> <a href="https://www.aliexpress.com/item/1005002603950456.html?pdp_npi=2%40dis%21GBP%21%EF%BF%A1128.91%21%EF%BF%A197.28%21%21%21%21%21%40211b5e2216837427439044000ed3e8%2112000029657337934%21btf&amp;_t=pvid:fa3b44d5-9a29-4a37-8afc-d58acfa30403&amp;afTraceInfo=1005002603950456__pc__pcBridgePPC__xxxxxx__1683742744&amp;spm=a2g0o.ppclist.product.mainProduct">[AliExpress]</a></p>

<h2 id="assembly">Assembly</h2>
<ol>
  <li>Add the hex screws provided with the Deck X kit into the adaptors.</li>
  <li>Connect the adaptors to each side of the headgear</li>
  <li>Tighten the new headgear to the optics bracket via the hex screw</li>
  <li>Adjust fit using adaptor angle and tightness to bring optics bracket closer to the face.</li>
</ol>]]></content><author><name></name></author><category term="open-source" /><category term="augmented-reality" /><summary type="html"><![CDATA[a comfier headgear solution]]></summary></entry><entry><title type="html">🔭 siril + gimp for foss astrophotography</title><link href="https://sambilbow.com/blog/2023/siril/" rel="alternate" type="text/html" title="🔭 siril + gimp for foss astrophotography" /><published>2023-04-26T00:00:00+00:00</published><updated>2023-04-26T00:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/siril</id><content type="html" xml:base="https://sambilbow.com/blog/2023/siril/"><![CDATA[<h2 id="summary">Summary</h2>

<div class="row">
    <div class="col-sm mt-3 mt-md-0">
        <div class="embed-responsive embed-responsive-16by9"><iframe src="https://www.youtube-nocookie.com/embed/TibmrYJEgVA" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen=""></iframe></div>
    </div>
</div>
<div class="caption">
    I followed along to this video by Nebula Photos, stacking, and editing a JWST <a href="https://www.nasa.gov/feature/goddard/2022/nasa-s-webb-takes-star-filled-portrait-of-pillars-of-creation/">image</a> of the Pillars of Creation.
</div>

<div class="row">
    <div class="col-sm mt-1 mt-md-0">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="/assets/img/pillars.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="a photo" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
</div>
<div class="caption">
    Not great, not terrible, but lots of fun! 🔭
</div>]]></content><author><name></name></author><category term="open-source" /><category term="astronomy" /><summary type="html"><![CDATA[free and open-source image stacking / editing]]></summary></entry><entry><title type="html">💎 jekyll + chatgpt</title><link href="https://sambilbow.com/blog/2023/jekyll-chatgpt/" rel="alternate" type="text/html" title="💎 jekyll + chatgpt" /><published>2023-04-22T00:00:00+00:00</published><updated>2023-04-22T00:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/jekyll-chatgpt</id><content type="html" xml:base="https://sambilbow.com/blog/2023/jekyll-chatgpt/"><![CDATA[<h2 id="summary">Summary</h2>
<p>I’ve been learning more Jekyll-related things like Ruby, some new Markdown tricks, and the web trio to make a nicer site. ChatGPT has been really helpful in moving towards a working understanding of how I can edit the template that I’m using (<a href="https://github.com/alshedivat/al-folio">al-folio</a>). It takes a fair amount of time to engineer prompts, but it helps that I know generally what the code I want should perform.</p>

<p><br /></p>

<h2 id="code-blocks">Code Blocks</h2>
<p>For example, I wanted to edit the way that code blocks were rendered in my recent <a href="/blog/2023/north-star-on-linux">blog post</a>. One thing led to another and I ended up trying to render codeblocks straight from files in my <code class="language-plaintext highlighter-rouge">/assets/</code> folder instead of adding the code to the <code class="language-plaintext highlighter-rouge">.md</code> file. This way, if I needed to update the code (in this case, <code class="language-plaintext highlighter-rouge">.json</code> configuration files), I could upload an update to my site folder via a git commit.</p>

<p>This was achieved by some Ruby code that ChatGPT generated that rendered the contents of the file within the correct HTML tags, generating the code block with a Liquid template called <code class="language-plaintext highlighter-rouge">code_block.html</code>.</p>

<p><br /></p>

<h2 id="gist-code-blocks">Gist Code Blocks</h2>
<p>After a couple of hours of co-engineering 🤔, I ended up deciding to host the file on Gist, and prompting ChatGPT to edit the code, which it “decided” to do by writing a Ruby plugin. Brilliant! A later iteration added an error fallback in the event that I was being rate-limited by GitHub’s API.</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">module</span> <span class="nn">Jekyll</span>
  <span class="k">class</span> <span class="nc">GistTag</span> <span class="o">&lt;</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Tag</span>
    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">tag_name</span><span class="p">,</span> <span class="n">input</span><span class="p">,</span> <span class="n">tokens</span><span class="p">)</span>
      <span class="k">super</span>
      <span class="vi">@gist_id</span> <span class="o">=</span> <span class="n">input</span><span class="p">.</span><span class="nf">strip</span>
    <span class="k">end</span>

    <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>
      <span class="n">uri</span> <span class="o">=</span> <span class="no">URI</span><span class="p">(</span><span class="s2">"https://api.github.com/gists/</span><span class="si">#{</span><span class="vi">@gist_id</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>
      <span class="n">response</span> <span class="o">=</span> <span class="no">Net</span><span class="o">::</span><span class="no">HTTP</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">uri</span><span class="p">)</span>

      <span class="k">if</span> <span class="n">response</span><span class="p">.</span><span class="nf">include?</span><span class="p">(</span><span class="s2">"API rate limit exceeded"</span><span class="p">)</span>
        <span class="k">return</span> <span class="s2">"`Error: API rate-limited by GitHub, follow link instead`"</span>
      <span class="k">end</span>

      <span class="n">json</span> <span class="o">=</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">response</span><span class="p">)</span>

      <span class="c1"># Extract the first file from the gist</span>
      <span class="n">filename</span><span class="p">,</span> <span class="n">file</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s1">'files'</span><span class="p">].</span><span class="nf">first</span>

      <span class="c1"># Capture the file contents as a string</span>
      <span class="n">captured</span> <span class="o">=</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="s2">"{% capture gist_content %}</span><span class="si">#{</span><span class="n">file</span><span class="p">[</span><span class="s1">'content'</span><span class="p">]</span><span class="si">}</span><span class="s2">{% endcapture %}"</span><span class="p">).</span><span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>

      <span class="c1"># Build the code block with the captured contents and custom data attribute</span>
      <span class="n">code_block</span> <span class="o">=</span> <span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="s2">"{% highlight </span><span class="si">#{</span><span class="n">file</span><span class="p">[</span><span class="s1">'language'</span><span class="p">]</span><span class="si">}</span><span class="s2"> %}{{ gist_content }}{% endhighlight %}"</span><span class="p">).</span><span class="nf">render</span><span class="p">(</span><span class="n">context</span><span class="p">)</span>

      <span class="c1"># Wrap the code block in a div with the correct classes and custom data attribute</span>
      <span class="n">code_block</span> <span class="o">=</span> <span class="s2">"&lt;div class='language-</span><span class="si">#{</span><span class="n">file</span><span class="p">[</span><span class="s1">'language'</span><span class="p">].</span><span class="nf">downcase</span><span class="si">}</span><span class="s2"> highlighter-rouge' data-gist-url='https://gist.github.com/</span><span class="si">#{</span><span class="n">json</span><span class="p">[</span><span class="s1">'owner'</span><span class="p">][</span><span class="s1">'login'</span><span class="p">]</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="vi">@gist_id</span><span class="si">}</span><span class="s2">'&gt;</span><span class="si">#{</span><span class="n">code_block</span><span class="si">}</span><span class="s2">&lt;/div&gt;"</span>

      <span class="c1"># Return the generated code block</span>
      <span class="n">code_block</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="no">Liquid</span><span class="o">::</span><span class="no">Template</span><span class="p">.</span><span class="nf">register_tag</span><span class="p">(</span><span class="s1">'gist'</span><span class="p">,</span> <span class="no">Jekyll</span><span class="o">::</span><span class="no">GistTag</span><span class="p">)</span>
</code></pre></div></div>

<p>This allows me to add the following tag to my <code class="language-plaintext highlighter-rouge">.md</code> posts:</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% gist 3b7b257b535b3dd6fa7b53ad7e453ed0 %}
</code></pre></div></div>

<p>and have it render in a native Jekyll codeblock, using <code class="language-plaintext highlighter-rouge">rouge</code> and <code class="language-plaintext highlighter-rouge">highlight</code>.</p>

<div class="language-json highlighter-rouge" data-gist-url="https://gist.github.com/sambilbow/3b7b257b535b3dd6fa7b53ad7e453ed0">
<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
	</span><span class="nl">"$schema"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://monado.pages.freedesktop.org/monado/config_v0.schema.json"</span><span class="w">
</span><span class="p">}</span></code></pre></figure>
</div>

<p><br /></p>

<h2 id="link-to-gist-button">Link to Gist button</h2>

<p>Additionally, I prompted ChatGPT to create a button in the top right hand corner of Gist codeblocks that links to their page, in the same style as the copy to clipboard button:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">gistUrl</span> <span class="o">=</span> <span class="nx">codeBlock</span><span class="p">.</span><span class="nf">closest</span><span class="p">(</span><span class="dl">'</span><span class="s1">div</span><span class="dl">'</span><span class="p">).</span><span class="nx">dataset</span><span class="p">.</span><span class="nx">gistUrl</span><span class="p">;</span>
<span class="k">if </span><span class="p">(</span><span class="nx">gistUrl</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">githubButton</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">button</span><span class="dl">'</span><span class="p">);</span>
    <span class="nx">githubButton</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">github</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">githubButton</span><span class="p">.</span><span class="nx">type</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">button</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">githubButton</span><span class="p">.</span><span class="nx">ariaLabel</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">View Gist on GitHub</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">githubButton</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">&lt;i class="fab fa-github"&gt;&lt;/i&gt;</span><span class="dl">'</span><span class="p">;</span>
    <span class="nx">codeBlock</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nx">githubButton</span><span class="p">);</span>

    <span class="c1">// open GitHub link to view Gist</span>
    <span class="nx">githubButton</span><span class="p">.</span><span class="nf">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="nf">function </span><span class="p">()</span> <span class="p">{</span>
    <span class="nb">window</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="nx">gistUrl</span><span class="p">,</span> <span class="dl">'</span><span class="s1">_blank</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">});</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<h2 id="advantages-compared-to-gistidjs">Advantages compared to <code class="language-plaintext highlighter-rouge">GistID.js</code></h2>

<p>I think this suits the styling of the website more than the native <code class="language-plaintext highlighter-rouge">GistID.js</code> codeblock, which is provided by sourcing <code class="language-plaintext highlighter-rouge">https://gist.github.com/&lt;githubUser&gt;/&lt;gistID&gt;.js</code> for example.  The <code class="language-plaintext highlighter-rouge">jekyll-gist</code> <a href="https://github.com/jekyll/jekyll-gist">plugin</a> provides a Liquid tag that does this for you when calling <code class="language-plaintext highlighter-rouge">{% gist &lt;gistID&gt; %}</code>. It looks like this:
<script src="https://gist.github.com/sambilbow/3b7b257b535b3dd6fa7b53ad7e453ed0.js"> </script></p>

<p>I like the border, line numbers, and file name so I might implement that. But overall, the styling from <code class="language-plaintext highlighter-rouge">rouge</code> is nicer, the functionality of the copy to clipboard button is brilliant, and overall it relies on less JavaScript I believe.</p>

<h2 id="conclusion">Conclusion</h2>

<p>I might add some snippets here and there to future blog posts about Jekyll, but for the moment, I hope this shows the power of ChatGPT in playing with libraries and languages you’re not to familiar with.</p>]]></content><author><name></name></author><category term="open-source" /><category term="website" /><summary type="html"><![CDATA[supercharged blog learning]]></summary></entry><entry><title type="html">🌔 open astro tech</title><link href="https://sambilbow.com/blog/2023/open-astro-tech/" rel="alternate" type="text/html" title="🌔 open astro tech" /><published>2023-04-17T12:00:00+00:00</published><updated>2023-04-17T12:00:00+00:00</updated><id>https://sambilbow.com/blog/2023/open-astro-tech</id><content type="html" xml:base="https://sambilbow.com/blog/2023/open-astro-tech/"><![CDATA[<p><a href="https://openastrotech.com/">OpenAstroTech</a> looks like a really fun project to get involved with! They are a community of open-source makers, trying to make astrophotography cheaper and more accessible. There are three projects, shown below. Watch this space 😃 👾 🚀</p>

<div class="row">
    <div class="col-sm mt-1 mt-md-0" align="center">
        <figure>
  
  <video autoplay="" muted="" playsinline="" class="img-fluid rounded z-depth-1" width="auto" height="auto">
  <source src="https://openastrotech.com/wp-content/uploads/revslider/Hero-Website-42/OAT_Assembly.mp4" type="video/mp4" />&lt;/source&gt;
</video>

<script>
  function reverse(video) {
    if (video.currentTime == 0) {
      video.playbackRate = 1;
    }
    if (video.currentTime == video.duration) {
      video.currentTime = video.duration;
      video.playbackRate = -1;
    }
  }
</script>


  
</figure>

    </div>
</div>

<div class="row">
    <div class="col-sm mt-1 mt-md-0" align="center">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="https://camo.githubusercontent.com/764767653f6faf61163d80047c5ba87caabe81d0ba7f92245b68e5dc04134857/68747470733a2f2f692e696d6775722e636f6d2f35454e757548762e6a7067" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="The Open Astro Tracker with the Open Astro Guider" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
    <div class="col-sm mt-1 mt-md-0" align="center">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="https://res.cloudinary.com/djoyuj7kf/images/f_auto,q_auto/v1626519451/Openastrotech/OAM_crop/OAM_crop.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="The Open Astro Mount" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
</div>
<div class="caption">
    The OpenAstroTracker (OAT) with OpenAstroGuider (OAG), and OpenAstroMount (OAM)
</div>
<div class="row">
    <div class="col-sm mt-1 mt-md-0" align="center">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="https://res.cloudinary.com/djoyuj7kf/images/w_1024,h_576,c_scale/f_auto,q_auto/v1614199481/Openastrotech/Veil_500mm_dunkler_3674b531/Veil_500mm_dunkler-1024x576.jpg?_i=AA" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Veil Nebula taken using the OAT" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
    <div class="col-sm mt-1 mt-md-0" align="center">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="https://res.cloudinary.com/djoyuj7kf/images/f_auto,q_auto/v1614199094/Openastrotech/50193493973_558caaa48e_o-794x1080_crop_1422b4677/50193493973_558caaa48e_o-794x1080_crop_1422b4677.jpg?_i=AA" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="M32 taken using the OAT" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
    <div class="col-sm mt-1 mt-md-0" align="center">
        <figure>
  
    <picture>
      
      <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="-480.webp" />
      <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="-800.webp" />
      <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="-1400.webp" />
      

      <!-- Fallback to the original file -->
      <img src="https://res.cloudinary.com/djoyuj7kf/images/w_1024,h_576,c_scale/f_auto,q_auto/v1614199485/Openastrotech/Cygnus-Wall_50-scaled_383eced5/Cygnus-Wall_50-1024x576.jpg?_i=AA" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Cygnus taken using the OAT" onerror="this.onerror=null; $('.responsive-img-srcset').remove();" />

    </picture>
  
</figure>

    </div>
</div>
<div class="caption">
    Some tracked shots using the OpenAstroTech devices with a DSLR camera. Veil Nebula 😍, M32, and Cygnus 
</div>]]></content><author><name></name></author><category term="open-source" /><category term="physics" /><category term="astronomy" /><summary type="html"><![CDATA[open-source astrophotography]]></summary></entry><entry><title type="html">northstar on linux</title><link href="https://sambilbow.com/blog/2023/north-star-on-linux/" rel="alternate" type="text/html" title="northstar on linux" /><published>2023-04-12T15:12:00+00:00</published><updated>2023-04-12T15:12:00+00:00</updated><id>https://sambilbow.com/blog/2023/north-star-on-linux</id><content type="html" xml:base="https://sambilbow.com/blog/2023/north-star-on-linux/"><![CDATA[<h2 id="summary">Summary</h2>
<hr />
<p>The past few weeks have been spent getting familiar with a North Star (NS) headset workflow on Linux. As part of <a href="/projects/comuse/">CoMuse</a> I hope to move towards a fully open-source stack for multi-user musical AR experience. Here’s a bunch of instructions on how to get started with North Star on Linux. Instructions are for <a href="https://wiki.archlinux.org/">Arch-based systems</a>, e.g. <a href="https://endeavouros.com/">EndeavourOS</a>, and assumes a <a href="https://wiki.archlinux.org/title/wayland#Compositors">Wayland compositor</a>, rather than X11, e.g. <a href="https://community.kde.org/KWin/Wayland"><code class="language-plaintext highlighter-rouge">kwin_wayland</code></a>. Also familiarity with a terminal emulator, e.g. <code class="language-plaintext highlighter-rouge">alacritty</code>.</p>

<p><strong>Current Windows Workflow</strong></p>

<p>North Star → Project Esky → Unity → Unity Scene</p>

<p><strong>Proposed Linux Workflow</strong></p>

<p>North Star → OpenXR → Monado → Application</p>

<p><br /></p>

<h2 id="installation-for-robots">Installation for Robots</h2>
<hr />

<p>Hey there! If you’re feeling adventurous and trust me enough to run a bash script, then boy oh boy do I have a treat for you. I’ve created a script that will get you started with North Star on Linux.</p>

<p>Now, I know what you’re thinking. “Why on earth would I trust some random person on the internet with access to my terminal?” Well, let me tell you, friend. You can trust me because… uh… it was partially created by ChatGPT, a highly advanced, eloquent and benevolent artificial intelligence programmed to assist and guide humans with their tasks. ChatGPT is great, in fact, ChatGPT wrote this paragraph! So yeah, that’s why you can trust <del>it</del> me… Yeah, let’s go with that.</p>

<p>So, if you’re feeling stupid, go ahead and run this command in your terminal:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-sS</span> https://www.sambilbow.com/assets/code/ns-monado.sh | bash <span class="o">&amp;&amp;</span> leapctl eula
</code></pre></div></div>

<p>and skip to <a href="#getting-started">Getting Started</a></p>

<p><strong><em>I take no responsibility if your computer suddenly gains sentience and starts plotting world domination.</em></strong></p>

<p><br /></p>

<h2 id="installation-for-humans">Installation for Humans</h2>
<hr />
<h3><img id="emoji" src="/assets/img/emoji/oxr.webp" /> OpenXR (Open Standard XR API)</h3>

<p>Download, build, and install <code class="language-plaintext highlighter-rouge">openxr-git</code> from the <a href="https://aur.archlinux.org/packages/openxr-git">AUR</a>, i.e. <code class="language-plaintext highlighter-rouge">yay -S openxr-git</code></p>

<p><br /></p>
<h3><img id="emoji" src="/assets/img/emoji/collabora.png" /> Monado (OpenXR Runtime for GNU/Linux)</h3>

<p>Download, build, and install <code class="language-plaintext highlighter-rouge">monado-git</code> from the <a href="https://aur.archlinux.org/packages/monado-git">AUR</a>, i.e. <code class="language-plaintext highlighter-rouge">yay -S monado-git</code></p>

<p><br /></p>
<h3><img id="emoji" src="/assets/img/emoji/ul_wave.webp" /> Ultraleap (Hand Tracking)</h3>

<p>As written in the <a href="https://docs.ultraleap.com/linux/">Linux documentation</a>, Ultraleap have released their Gemini V5 tracking software as a beta for Ubuntu 22.04 LTS. However, the files are accessible via their repository for non-Debian Linux systems. I have created a <a href="https://aur.archlinux.org/packages/ultraleap-hand-tracking">meta-package <img id="emoji" src="/assets/img/emoji/arch.webp" /></a> for all three required packages below on the <code class="language-plaintext highlighter-rouge">AUR</code>. It can be installed via <code class="language-plaintext highlighter-rouge">yay -S ultraleap-hand-tracking</code> and accepting default options when prompted.</p>

<p>Here are the individual packages, with links to their official Debian repository location, and their <code class="language-plaintext highlighter-rouge">AUR</code> counterpart:</p>
<ul>
  <li><a href="https://repo.ultraleap.com/apt/pool/main/u/ultraleap-hand-tracking-service/ultraleap-hand-tracking-service_5.6.3.0-18a4db52-1.0_amd64.deb">🔽</a> <a href="https://aur.archlinux.org/packages/ultraleap-hand-tracking-service"><img id="emoji" src="/assets/img/emoji/arch.webp" /></a> <code class="language-plaintext highlighter-rouge">ultraleap-hand-tracking-service</code> - a background service that attaches to Ultraleap devices.</li>
  <li><a href="https://repo.ultraleap.com/apt/pool/main/u/ultraleap-hand-tracking-control-panel/ultraleap-hand-tracking-control-panel_684937.deb">🔽</a> <a href="https://aur.archlinux.org/packages/ultraleap-hand-tracking-control-panel"><img id="emoji" src="/assets/img/emoji/arch.webp" /></a> <code class="language-plaintext highlighter-rouge">ultraleap-hand-tracking-control-panel</code> - a GUI application that shows cameras &amp; info.</li>
  <li><a href="https://repo.ultraleap.com/apt/pool/main/o/openxr-layer-ultraleap/openxr-layer-ultraleap_1.3.1_amd64.deb">🔽</a> <a href="https://aur.archlinux.org/packages/openxr-layer-ultraleap"><img id="emoji" src="/assets/img/emoji/arch.webp" /></a> <code class="language-plaintext highlighter-rouge">openxr-layer-ultraleap</code> - an OpenXR layer that allows Ultraleap devices connect at the API layer.</li>
</ul>

<p>If you don’t want to use the <code class="language-plaintext highlighter-rouge">AUR</code>, unarchive the <code class="language-plaintext highlighter-rouge">.deb</code> from each repository, then do the same with the <code class="language-plaintext highlighter-rouge">data.tar.xz</code> inside (you can ignore <code class="language-plaintext highlighter-rouge">control.tar.xz</code>, this only contains meta-information about the package). Place all sub-directory files in their respective folders on your operating system using <code class="language-plaintext highlighter-rouge">sudo mv [file path] [destination path]</code>.</p>

<p>Run the following after installing, to enable the service at startup, and accept the Ultraleap EULA.</p>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>systemctl <span class="nb">enable </span>ultraleap-hand-tracking-service <span class="nt">--now</span> <span class="o">&amp;&amp;</span> <span class="se">\</span>
leapctl eula 
</code></pre></div></div>

<p><br /></p>
<h3><img id="emoji" src="/assets/img/emoji/intel.png" /> RealSense (6DoF Tracking)</h3>
<p>Download, build, and install <code class="language-plaintext highlighter-rouge">librealsense</code> and <code class="language-plaintext highlighter-rouge">libuvc</code> from the <a href="https://aur.archlinux.org/packages/librealsense">AUR</a>, i.e. <code class="language-plaintext highlighter-rouge">yay -S librealsense libuvc</code></p>

<p><br /></p>
<h3><img id="emoji" src="/assets/img/emoji/arduino.png" /> Arduino (Firmware)</h3>
<p>Download, build, and install <code class="language-plaintext highlighter-rouge">arduino</code> from the <code class="language-plaintext highlighter-rouge">community</code> repository, i.e. <code class="language-plaintext highlighter-rouge">yay -S arduino</code></p>

<p><br /></p>

<h2 id="monado-configuration">Monado Configuration</h2>
<hr />
<ul>
  <li>
    <p>Make sure you Monado is set as your active OpenXR runtime. Check via the environment variable: <code class="language-plaintext highlighter-rouge">echo $XR_RUNTIME_JSON</code>. If there is no output, follow <a href="https://monado.freedesktop.org/getting-started.html#selecting-the-monado-runtime-for-openxr-applications">these</a> instructions.</p>
  </li>
  <li>
    <p>Set <code class="language-plaintext highlighter-rouge">~/.config/monado/config_v0.json</code> to the <a href="https://gist.github.com/sambilbow/3b7b257b535b3dd6fa7b53ad7e453ed0">following</a>:</p>
  </li>
</ul>
<div class="language-json highlighter-rouge" data-gist-url="https://gist.github.com/sambilbow/3b7b257b535b3dd6fa7b53ad7e453ed0">
<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
	</span><span class="nl">"$schema"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://monado.pages.freedesktop.org/monado/config_v0.schema.json"</span><span class="w">
</span><span class="p">}</span></code></pre></figure>
</div>

<ul>
  <li>Set <code class="language-plaintext highlighter-rouge">~/.config/monado/NorthStarCalibration.json</code> to the <a href="https://gist.github.com/sambilbow/91e1f794a6c757aa368c17ee8e01a20e">following</a>, replacing the <code class="language-plaintext highlighter-rouge">uv_to_rect</code> attributes with your own <a href="https://docs.projectnorthstar.org/calibration/2d-calibration">V2 calibration results</a>:</li>
</ul>
<div class="language-json highlighter-rouge" data-gist-url="https://gist.github.com/sambilbow/91e1f794a6c757aa368c17ee8e01a20e">
<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
  </span><span class="nl">"baseline"</span><span class="p">:</span><span class="w"> </span><span class="mi">64</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left_fov_radians_left"</span><span class="p">:</span><span class="w"> </span><span class="mf">-0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left_fov_radians_right"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left_fov_radians_up"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"left_fov_radians_down"</span><span class="p">:</span><span class="w"> </span><span class="mf">-0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"right_fov_radians_left"</span><span class="p">:</span><span class="w"> </span><span class="mf">-0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"right_fov_radians_right"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"right_fov_radians_up"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"right_fov_radians_down"</span><span class="p">:</span><span class="w"> </span><span class="mf">-0.8</span><span class="p">,</span><span class="w">
  </span><span class="nl">"t265"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"active"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="nl">"P_middleofeyes_to_trackingcenter_oxr"</span><span class="p">:{</span><span class="w">
      </span><span class="nl">"position"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="nl">"x"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="nl">"y"</span><span class="p">:</span><span class="w"> </span><span class="mf">-0.04824</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.08609</span><span class="p">},</span><span class="w">
      </span><span class="nl">"orientation"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="nl">"x"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.105</span><span class="p">,</span><span class="nl">"y"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="nl">"z"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="nl">"w"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.995</span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"left_uv_to_rect_x"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mf">-0.8095003898834657</span><span class="p">,</span><span class="w"> </span><span class="mf">1.4554106257653072</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.7773809977468603</span><span class="p">,</span><span class="w"> </span><span class="mf">0.36967403509293806</span><span class="p">,</span><span class="w"> </span><span class="mf">0.1296775350969796</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.21637890025302492</span><span class="p">,</span><span class="w"> </span><span class="mf">0.8416143930407659</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.5526095960484587</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.23531800162009645</span><span class="p">,</span><span class="w"> </span><span class="mf">1.143919902646346</span><span class="p">,</span><span class="w"> </span><span class="mf">-2.3456939620802744</span><span class="p">,</span><span class="w"> </span><span class="mf">1.460311705702624</span><span class="p">,</span><span class="w"> </span><span class="mf">0.014822777304581144</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.24003964060866342</span><span class="p">,</span><span class="w"> </span><span class="mf">0.8664693244008452</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.5376673413826943</span><span class="p">],</span><span class="w"> 
  </span><span class="nl">"left_uv_to_rect_y"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mf">-0.46871202987411814</span><span class="p">,</span><span class="w"> </span><span class="mf">0.30170126370379197</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.47660532303616326</span><span class="p">,</span><span class="w"> </span><span class="mf">0.03431344082830879</span><span class="p">,</span><span class="w"> </span><span class="mf">1.1429691076970927</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.8002538693210614</span><span class="p">,</span><span class="w"> </span><span class="mf">1.130777221567728</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.5460233471534343</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.46220913444061085</span><span class="p">,</span><span class="w"> </span><span class="mf">0.9136086350468807</span><span class="p">,</span><span class="w"> </span><span class="mf">-1.9560853146408843</span><span class="p">,</span><span class="w"> </span><span class="mf">1.2520629301319113</span><span class="p">,</span><span class="w"> </span><span class="mf">0.3998405266373577</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.771719042394445</span><span class="p">,</span><span class="w"> </span><span class="mf">1.4627736379425091</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.9364919387683032</span><span class="p">],</span><span class="w"> 
  </span><span class="nl">"right_uv_to_rect_x"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mf">-0.8756783654089152</span><span class="p">,</span><span class="w"> </span><span class="mf">1.8875569705203976</span><span class="p">,</span><span class="w"> </span><span class="mf">-1.0087008718225396</span><span class="p">,</span><span class="w"> </span><span class="mf">0.5130896252326521</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.03841362094642798</span><span class="p">,</span><span class="w"> </span><span class="mf">0.5457458544503613</span><span class="p">,</span><span class="w"> </span><span class="mf">-1.9948297423459715</span><span class="p">,</span><span class="w"> </span><span class="mf">1.0568231573982978</span><span class="p">,</span><span class="w"> </span><span class="mf">0.364541921538492</span><span class="p">,</span><span class="w"> </span><span class="mf">-3.031435348103529</span><span class="p">,</span><span class="w"> </span><span class="mf">6.525284759259127</span><span class="p">,</span><span class="w"> </span><span class="mf">-3.691141330603938</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.3520650564480912</span><span class="p">,</span><span class="w"> </span><span class="mf">2.3077796317190997</span><span class="p">,</span><span class="w"> </span><span class="mf">-4.679682723890192</span><span class="p">,</span><span class="w"> </span><span class="mf">2.7076975783555843</span><span class="p">],</span><span class="w"> 
  </span><span class="nl">"right_uv_to_rect_y"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mf">-0.37556223294961705</span><span class="p">,</span><span class="w"> </span><span class="mf">0.09788739182864804</span><span class="p">,</span><span class="w"> </span><span class="mf">0.20612688870797224</span><span class="p">,</span><span class="w"> </span><span class="mf">0.018202268047632426</span><span class="p">,</span><span class="w"> </span><span class="mf">1.1512068570708922</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.2696319130575867</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.35236717773941184</span><span class="p">,</span><span class="w"> </span><span class="mf">0.3331241095814942</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.35968622664250754</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.3372985493324961</span><span class="p">,</span><span class="w"> </span><span class="mf">1.0606222321031296</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.5205614601118577</span><span class="p">,</span><span class="w"> </span><span class="mf">0.29099806952268736</span><span class="p">,</span><span class="w"> </span><span class="mf">0.0763539162733278</span><span class="p">,</span><span class="w"> </span><span class="mf">-0.2842991526147592</span><span class="p">,</span><span class="w"> </span><span class="mf">0.1018878015082091</span><span class="p">]</span><span class="w">
</span><span class="p">}</span></code></pre></figure>
</div>

<h3 id="setting-environment-variables">Setting Environment Variables</h3>
<p>If you want <a href="https://monado.freedesktop.org/direct-mode.html">direct-mode</a>, you have to use an X11 compositor with Monado, its not currently supported on Wayland or Xwayland. That said, I wanted to use Wayland because 🤷, I’m also used to extended-mode from the Unity Windows workflow so lack of direct-mode doesn’t bother me right now. Either way, you will need to set the following Monado environment variables in your shell configuration file, this guide assumes <code class="language-plaintext highlighter-rouge">zsh</code>, and therfore <code class="language-plaintext highlighter-rouge">~/.zshrc</code>. Feel free to add them with this command:</p>
<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="s1">'
export NS_CONFIG_PATH=~/.config/monado/NorthStarCalibration.json # Set path to North Star calibration file.
export XRT_COMPOSITOR_DISABLE_DEFERRED=true # Keep Monado open even if no apps running.
export XRT_COMPOSITOR_FORCE_XCB=1 # Force an X11 window, thus causing Xwayland.
export XRT_COMPOSITOR_XCB_FULLSCREEN=1 # Fullscreen variable for X11/Xwayland.
'</span> <span class="o">&gt;&gt;</span> ~/.zshrc <span class="o">&amp;&amp;</span> <span class="nb">exec </span>zsh
</code></pre></div></div>
<p><br /></p>

<h2 id="getting-started">Getting Started</h2>
<hr />

<h3 id="hardware">Hardware</h3>
<ol>
  <li>Plug in your North Star via USB 2.0 (either use a hub or a motherboard port, depending on whether or not you have a 2.0 port). Using Ultraleap devices through USB 3 on Linux is not currently supported due to driver shenanigans. <a href="https://discord.com/channels/994213697490800670/1061452346686713957/1062331957456928848">Source: <img src="/assets/img/monado-discord.png" />  <img id="emoji" src="/assets/img/emoji/discord.png" /></a></li>
  <li>Plug in your North Star via DisplayPort to your graphics card.</li>
  <li>Force <code class="language-plaintext highlighter-rouge">portReset()</code> on your North Star, via holding down the circle and dot buttons for 5 seconds. This power cycles your USB 3 header sensors (Stereo IR 170 and Intel T261) and ensures that they enumerate properly.</li>
  <li>Check that the sensors are working correctly
    <ol>
      <li>Run RealSense Viewer and check that the T261 is listed under sources.</li>
      <li>Run Ultraleap Control Panel and verify that the camera feed is being received.</li>
      <li>Close both.</li>
    </ol>
  </li>
</ol>

<p><br /></p>

<h3 id="starting-monado">Starting Monado</h3>
<ol>
  <li>Run <code class="language-plaintext highlighter-rouge">monado-service</code>. If all goes well, you should be greeted with an output log that mentions your <code class="language-plaintext highlighter-rouge">NorthStarCalibration.json</code> being read. Look for  <code class="language-plaintext highlighter-rouge">INFO [p_create_system] Creating system:</code>, specifically the lines:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Got devices:
	0: Intel RealSense Device-SLAM
	1: North Star
</code></pre></div>    </div>
  </li>
  <li>A grey, fullscreen Xwayland Monado window should open on your main display.</li>
  <li>Move it to your North Star display, e.g by using the Kwin shortcut <code class="language-plaintext highlighter-rouge">Meta-Shift-right</code></li>
  <li>Congratulations, you win 🎉</li>
  <li>You can check Monado has access to your sensors by running a demo.</li>
  <li>Open a new terminal, download this simple <a href="https://gitlab.freedesktop.org/monado/demos/openxr-simple-playground">demo</a>, enter the directory, make and run the demo with:
    <div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://gitlab.freedesktop.org/monado/demos/openxr-simple-playground <span class="o">&amp;&amp;</span> <span class="se">\</span>
<span class="nb">cd </span>openxr-simple-playground <span class="o">&amp;&amp;</span> <span class="se">\ </span>
cmake ./ <span class="o">&amp;&amp;</span> <span class="se">\</span>
make <span class="o">&amp;&amp;</span> <span class="se">\</span>
./openxr-playground
</code></pre></div>    </div>
  </li>
  <li>You should have hand and 6DoF tracking working. Congratulations, you won again 🎉</li>
</ol>

<p><br /></p>

<h2 id="uploading-integrator-sketches">Uploading Integrator Sketches</h2>
<hr />
<ol>
  <li>Download the Linux compatible <code class="language-plaintext highlighter-rouge">North-Star-Integrator</code> <a href="https://github.com/sambilbow/North-Star-Integrator/tree/master/firmware/ExampleSketches">sketches</a>:
    <div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/sambilbow/North-Star-Integrator.git <span class="o">&amp;&amp;</span> <span class="se">\</span>
<span class="nb">cd </span>North-Star-Integrator/firmware/ExampleSketches
</code></pre></div>    </div>
  </li>
  <li>You may have to add yourself to the usergroup that <code class="language-plaintext highlighter-rouge">/dev/ttyACM0</code> (the Arduino Leonardo’s serial port) is part of if you are receiving errors uploading sketches.
    <ol>
      <li>Run <code class="language-plaintext highlighter-rouge">stat /dev/ttyACM0</code> in a terminal</li>
      <li>Note the user group that the serial port is assigned to, e.g. <code class="language-plaintext highlighter-rouge">dialout</code> or <code class="language-plaintext highlighter-rouge">plugdev</code></li>
      <li>Add your user to this group with <code class="language-plaintext highlighter-rouge">sudo usermod -a -G [group] [username]</code></li>
      <li><code class="language-plaintext highlighter-rouge">sudo</code> run command as superuser</li>
      <li><code class="language-plaintext highlighter-rouge">usermod</code> modify user attributes</li>
      <li><code class="language-plaintext highlighter-rouge">-a</code> append</li>
      <li><code class="language-plaintext highlighter-rouge">-G</code> group</li>
    </ol>
  </li>
  <li>Add the <code class="language-plaintext highlighter-rouge">../libraries/SX1508</code> folder to your Arduino library directory (default on Linux: <code class="language-plaintext highlighter-rouge">/home/[user]/Arduino/libraries</code>)
    <div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">mkdir</span> <span class="nt">-p</span> ~/Arduino/libraries <span class="o">&amp;&amp;</span> <span class="se">\</span>
<span class="nb">cp</span> ../libraries/SX1508 ~/Arduino/libraries/
</code></pre></div>    </div>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">../libraries/SX1508/src/util/sx1508_registers.h</code> has been renamed to <code class="language-plaintext highlighter-rouge">SX1508_registers.h</code> in this repo because I was getting errors when I tried to access this file in the Arduino IDE on Linux, I believe this was because of <a href="https://en.wikipedia.org/wiki/Case_sensitivity">UNIX case-sensitivity</a>.</li>
    </ul>
  </li>
  <li>Open a sketch from the folder in Arduino IDE</li>
  <li>Install any additionally required libraries (on Linux I needed to add the <code class="language-plaintext highlighter-rouge">Keyboard</code> library)</li>
  <li>Set the correct Port and Board in <code class="language-plaintext highlighter-rouge">Tools &gt; </code></li>
  <li>Verify and Upload the sketch.</li>
</ol>]]></content><author><name></name></author><category term="open-source" /><category term="linux" /><category term="augmented-reality" /><summary type="html"><![CDATA[towards an open-source workflow for AR musical instruments]]></summary></entry></feed>